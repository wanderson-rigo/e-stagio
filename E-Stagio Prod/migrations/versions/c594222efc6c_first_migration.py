"""first_migration

Revision ID: c594222efc6c
Revises: 
Create Date: 2024-11-03 23:35:45.810059

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c594222efc6c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('fs_uniquifier', sa.String(length=255), nullable=False),
    sa.Column('current_login_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('current_login_ip', sa.String(length=100), nullable=True),
    sa.Column('last_login_ip', sa.String(length=100), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('fs_uniquifier'),
    sa.UniqueConstraint('username')
    )
    op.create_table('alunos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('matricula', sa.String(length=20), nullable=False),
    sa.Column('data_de_nascimento', sa.Date(), nullable=False),
    sa.Column('rg', sa.String(length=20), nullable=False),
    sa.Column('cpf', sa.String(length=14), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('celular', sa.String(length=15), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cpf'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('matricula')
    )
    op.create_table('empresas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cnpj', sa.String(length=18), nullable=False),
    sa.Column('qsa', sa.String(length=255), nullable=False),
    sa.Column('rg_responsavel', sa.String(length=20), nullable=False),
    sa.Column('cpf_responsavel', sa.String(length=14), nullable=False),
    sa.Column('nome_empresa', sa.String(length=100), nullable=False),
    sa.Column('nome_responsavel', sa.String(length=100), nullable=False),
    sa.Column('email_empresa', sa.String(length=100), nullable=False),
    sa.Column('email_responsavel', sa.String(length=100), nullable=True),
    sa.Column('telefone_empresa', sa.String(length=20), nullable=False),
    sa.Column('telefone_responsavel', sa.String(length=20), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cnpj')
    )
    op.create_table('professores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('cpf', sa.String(length=14), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cpf')
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('supervisores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cpf', sa.String(length=14), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('formacao', sa.String(length=100), nullable=False),
    sa.Column('telefone', sa.String(length=15), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresas.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cpf'),
    sa.UniqueConstraint('email')
    )
    op.create_table('estagios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('aluno_id', sa.Integer(), nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.Column('supervisor_id', sa.Integer(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('modalidade', sa.String(length=50), nullable=False),
    sa.Column('carga_horaria', sa.Integer(), nullable=False),
    sa.Column('atividades', sa.Text(), nullable=False),
    sa.Column('setor', sa.String(length=100), nullable=False),
    sa.Column('remuneracao', sa.Boolean(), nullable=False),
    sa.Column('valor_remuneracao', sa.Float(), nullable=True),
    sa.Column('horario_estagio', sa.String(length=100), nullable=False),
    sa.Column('data_inicio', sa.Date(), nullable=False),
    sa.Column('data_conclusao', sa.Date(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('AGUARDANDO_APROVACAO', 'APROVADO', 'EM_ANDAMENTO', 'AGUARDANDO_AVALIACAO', 'FINALIZADO', 'CANCELADO', name='statusestagio'), nullable=False),
    sa.Column('empresa_nota_interesse', sa.Float(), nullable=True),
    sa.Column('empresa_nota_iniciativa', sa.Float(), nullable=True),
    sa.Column('empresa_nota_cooperacao', sa.Float(), nullable=True),
    sa.Column('empresa_nota_assiduidade', sa.Float(), nullable=True),
    sa.Column('empresa_nota_pontualidade', sa.Float(), nullable=True),
    sa.Column('empresa_nota_disciplina', sa.Float(), nullable=True),
    sa.Column('empresa_nota_sociabilidade', sa.Float(), nullable=True),
    sa.Column('empresa_nota_adaptabilidade', sa.Float(), nullable=True),
    sa.Column('empresa_nota_responsabilidade', sa.Float(), nullable=True),
    sa.Column('empresa_nota_etica', sa.Float(), nullable=True),
    sa.Column('empresa_atividades', sa.Text(), nullable=True),
    sa.Column('emprsa_comentarios', sa.Text(), nullable=True),
    sa.Column('empresa_media_notas', sa.Float(), nullable=True),
    sa.Column('aluno_nota_rendimento', sa.Float(), nullable=True),
    sa.Column('aluno_nota_facilidade_e_compreensao', sa.Float(), nullable=True),
    sa.Column('aluno_nota_conhecimentos_tecnicos', sa.Float(), nullable=True),
    sa.Column('aluno_nota_organizacao_metodo_trabalho', sa.Float(), nullable=True),
    sa.Column('aluno_nota_iniciativa_independencia', sa.Float(), nullable=True),
    sa.Column('aluno_nota_disciplina', sa.Float(), nullable=True),
    sa.Column('aluno_nota_sociabilidade_desempenho', sa.Float(), nullable=True),
    sa.Column('aluno_nota_assiduidade', sa.Float(), nullable=True),
    sa.Column('aluno_nota_cooperecao', sa.Float(), nullable=True),
    sa.Column('aluno_nota_responsabilidade', sa.Float(), nullable=True),
    sa.Column('aluno_atividades', sa.Text(), nullable=True),
    sa.Column('aluno_comentarios', sa.Text(), nullable=True),
    sa.Column('aluno_media_notas', sa.Float(), nullable=True),
    sa.Column('aluno_avaliacao_empresa_condicoes', sa.Integer(), nullable=True),
    sa.Column('aluno_avaliacao_atendeu_expectativas', sa.Integer(), nullable=True),
    sa.Column('aluno_avaliacao_contribui_formacao_profissional', sa.Integer(), nullable=True),
    sa.Column('aluno_avaliacao_recomendaria_para_outro', sa.Integer(), nullable=True),
    sa.Column('aluno_avaliacao_curso_capacitou', sa.Integer(), nullable=True),
    sa.Column('aluno_avaliacao_orientador_acompanhou', sa.Integer(), nullable=True),
    sa.Column('aluno_avaliacao_supervisor_acompanhou', sa.Integer(), nullable=True),
    sa.Column('professor_nota_avaliacao', sa.Float(), nullable=True),
    sa.Column('professor_avaliacao_comentarios', sa.Text(), nullable=True),
    sa.Column('banca_nota_avaliacao_empresa', sa.Float(), nullable=True),
    sa.Column('banca_nota_avaliacao_orientador', sa.Float(), nullable=True),
    sa.Column('banca_nota_apresentacao_oral_1', sa.Float(), nullable=True),
    sa.Column('banca_nota_pratica_profissional_1', sa.Float(), nullable=True),
    sa.Column('banca_nota_relatorio_1', sa.Float(), nullable=True),
    sa.Column('banca_nota_apresentacao_oral_2', sa.Float(), nullable=True),
    sa.Column('banca_nota_pratica_profissional_2', sa.Float(), nullable=True),
    sa.Column('banca_nota_relatorio_2', sa.Float(), nullable=True),
    sa.Column('banca_avaliador_1', sa.Text(), nullable=True),
    sa.Column('banca_avaliador_2', sa.Text(), nullable=True),
    sa.Column('banca_autoavaliacao', sa.Float(), nullable=True),
    sa.Column('banca_aprovado', sa.Boolean(), nullable=True),
    sa.Column('banca_reprovado', sa.Boolean(), nullable=True),
    sa.Column('banca_aprovado_com_ressalva', sa.Boolean(), nullable=True),
    sa.Column('banca_relatorio_entrega', sa.Date(), nullable=True),
    sa.Column('banca_refazer_apresentacao', sa.Date(), nullable=True),
    sa.Column('banca_comentarios', sa.Text(), nullable=True),
    sa.Column('banca_nota_apresentacao_oral_supervisor', sa.Float(), nullable=True),
    sa.Column('banca_nota_pratica_profissional_supervisor', sa.Float(), nullable=True),
    sa.Column('banca_nota_relatorio_supervisor', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['aluno_id'], ['alunos.id'], ),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresas.id'], ),
    sa.ForeignKeyConstraint(['professor_id'], ['professores.id'], ),
    sa.ForeignKeyConstraint(['supervisor_id'], ['supervisores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('atividades_estagio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('descricao', sa.String(length=255), nullable=False),
    sa.Column('horario_entrada', sa.Time(), nullable=False),
    sa.Column('horario_saida', sa.Time(), nullable=False),
    sa.Column('horas_totais', sa.Float(), nullable=False),
    sa.Column('data', sa.Date(), nullable=False),
    sa.Column('estagio_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['estagio_id'], ['estagios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('atividades_estagio')
    op.drop_table('estagios')
    op.drop_table('supervisores')
    op.drop_table('roles_users')
    op.drop_table('professores')
    op.drop_table('empresas')
    op.drop_table('alunos')
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###
